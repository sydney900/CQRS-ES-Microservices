apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.clientservice.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.clientservice.name }}
    helm.sh/chart: {{ include "V1Helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.clientservice.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.clientservice.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Values.clientservice.name }}
          image: {{ .Values.clientservice.image.repo }}:{{ .Values.clientservice.image.tag }}          
          imagePullPolicy: {{ .Values.clientservice.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.clientservice.containerPort }}
              protocol: TCP
          env:
            - name: APINAME
              value: client.service.api
            - name: APISECRET
              value: client.service.api.secret
            - name: ASPNETCORE_ENVIRONMENT
              value: {{ .Values.ASPNETCORE_ENVIRONMENT }}
            - name: CLIENTID
              value: ro.client
            - name: CLIENTSECRETS
              value: 8FEA01FC-5D0C-4285-9E69-27C04D53D7D2
            - name: IDENTITYSERVERURL
              value: http://{{ .Values.authserver.myIP }}:{{ .Values.authserver.service.exposePort }}
            - name: NETWORK_HOST
              value: "eth0:ipv4"
          livenessProbe:
            httpGet:
              path: {{ .Values.healthcheck.liveness.path }}
              port: {{ .Values.clientservice.service.exposePort }}
            initialDelaySeconds: {{ .Values.healthcheck.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthcheck.liveness.periodSeconds }}
            failureThreshold: {{ .Values.healthcheck.liveness.failureThreshold }}
            successThreshold: {{ .Values.healthcheck.liveness.successThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthcheck.readiness.path }}
              port: {{ .Values.clientservice.service.exposePort }}
            initialDelaySeconds: {{ .Values.healthcheck.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthcheck.readiness.periodSeconds }}
            failureThreshold: {{ .Values.healthcheck.readiness.failureThreshold }}
            successThreshold: {{ .Values.healthcheck.readiness.successThreshold }}
          restartPolicy: Always
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}